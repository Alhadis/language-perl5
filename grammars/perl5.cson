name: "Perl 5"
scopeName: "source.perl.5"
fileTypes: [
	"pl"
	"pm"
	"pod"
	"psgi"
	"t"
]
firstLineMatch: """(?x)
	# Hashbang
	^\\#!.*(?:\\s|\\/|(?<=!)\\b)perl(?:$|\\s)
	|
	# Modeline
	(?i:
		# Emacs
		-\\*-(?:(?:(?!mode\\s*:)[^:;]+:[^:;]+;)*\\s*mode\\s*:)?\\s*
			perl
		\\s*(?:;[^:;]+:[^:;]+?)*;?\\s*-\\*-
		|
		# Vim
		(?:(?:\\s|^)vi(?:m[<=>]?\\d+|m)?|(?!^)\\sex)(?=:(?=\\s*set?\\s[^\\n:]+:)|:(?!\\s*set?\\s))(?:(?:\\s|\\s*:\\s*)\\w*(?:\\s*=(?:[^\\n\\\\\\s]|\\\\.)*)?)*[\\s:](?:filetype|ft|syntax)\\s*=
			perl
		(?=\\s|:|$)
	)
"""

patterns: [
	{include: "#comment"}
	{include: "#variables"}
]

repository:
	
	# @array_terms
	array:
		patterns: [{
			# @days[3, 4, 5]
			name: "meta.slice.array.perl"
			begin: "((@)\\w+)(\\[)"
			end:   "]"
			beginCaptures:
				1: name: "variable.other.array.list.perl"
				2: name: "punctuation.definition.variable.array.sigil.perl"
				3: name: "punctuation.definition.array.slice.begin.perl"
			endCaptures:
				0: name: "punctuation.definition.array.slice.end.perl"
			patterns: [include: "#variableInnards"]
		},{
			# @days{"Jan","Feb"}
			name:  "meta.slice.hash.perl"
			begin: "((@)\\w+)({)"
			end:   "}"
			beginCaptures:
				1: name: "variable.other.array.list.perl"
				2: name: "punctuation.definition.variable.array.sigil.perl"
				3: name: "punctuation.definition.array.slice.begin.perl"
			endCaptures:
				0: name: "punctuation.definition.array.slice.end.perl"
			patterns: [include: "#variableInnards"]
		},{
			# @array
			name: "variable.other.array.list.perl"
			match: "(@)\\w+"
			captures:
				1: name: "punctuation.definition.variable.array.sigil.perl"
		}]
	
	comment:
		name: "comment.line.number-sign.perl"
		begin: "#"
		end:   "$"
		beginCaptures:
			0: name: "punctuation.definition.comment.perl"


	# %hash_terms
	hash:
		name: "variable.other.hash.perl"
		match: "(%)\\w+"
		captures:
			1: name: "punctuation.definition.variable.hash.sigil.perl"

	
	# $scalar_terms
	scalar:
		patterns: [{
			# $#array - Last index of @array
			name: "variable.other.scalar.length.perl"
			match: "(\\$)(#)\\w+"
			captures:
				1: name: "punctuation.definition.variable.scalar.sigil.perl"
				2: name: "punctuation.definition.variable.length.perl"
		},{
			# ${scalar}
			name: "meta.scalar.reference.perl"
			begin: "(\\$)({)"
			end:   "}"
			beginCaptures:
				1: name: "punctuation.definition.variable.scalar.sigil.perl"
				2: name: "punctuation.definition.variable.scalar.name.begin.perl"
			endCaptures:
				0: name: "punctuation.definition.variable.scalar.name.end.perl"
			patterns: [include: "#variableInnards"]
		},{
			# $hash{key}
			name:  "meta.access.hash.perl"
			begin: "((\\$)\\w+)({)"
			end:   "}"
			beginCaptures:
				1: name: "variable.other.scalar.hash-item.perl"
				2: name: "punctuation.definition.variable.scalar.sigil.perl"
				3: name: "punctuation.definition.access.hash.begin.perl"
			endCaptures:
				0: name: "punctuation.definition.access.hash.end.perl"
			patterns: [include: "#variableInnards"]
		},{
			# $array[index]
			name: "meta.access.array.perl"
			begin: "((\\$)\\w+)(\\[)"
			end:   "]"
			beginCaptures:
				1: name: "variable.other.scalar.array-item.perl"
				2: name: "punctuation.definition.variable.scalar.sigil.perl"
				3: name: "punctuation.definition.array.access.begin.perl"
			endCaptures:
				0: name: "punctuation.definition.array.access.end.perl"
			patterns: [include: "#variableInnards"]
		},{
			# $qualified::scalar::reference
			name:  "variable.other.scalar.qualified.perl"
			match: "(\\$)\\w+((?:::\\w+)+)"
			captures:
				1: name: "punctuation.definition.variable.scalar.sigil.perl"
				2: patterns: [{
					match: "::"
					name: "punctuation.separator.double-colon.perl"
				}]
		},{
			# $scalar
			name: "variable.other.scalar.perl"
			match: "(\\$)\\w+"
			captures:
				1: name: "punctuation.definition.variable.scalar.sigil.perl"
		}]


	variables:
		patterns: [
			{include: "#array"}
			{include: "#hash"}
			{include: "#scalar"}
		]

	# Patterns used inside stuff like ${scalar} or $hash{key}
	variableInnards:
		patterns: [{
			name: "variable.other.scalar.braced.perl"
			match: "\\w+"
		}, include: "$self"]
